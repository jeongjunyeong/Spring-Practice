/*******************************
 * 문자열 시프팅 차이값
 */

const input = [
// [first, second]
    ["hello", "hello"],    // 0
    ["hello", "ohell"],    // 1
    ["hello", "lohel"],    // 2
    ["hello", "llohe"],    // 3
    ["hello", "elloh"],    // 4
    ["hello", "elohl"],    // -1

]

function shiftedDiff(first, second){
    // TODO
    // 리턴값: 정수

    if (first.length !== second.length) {
        return -1; 
        // 두 문자열의 길이가 다르다면 시프트 하지않고 -1 반환
    }

    const len = first.length;
    // 입력으로 받은 문자열 first의 길이를 len이라는 변수에 저장

    for (let i = 0; i < len; i++) {
        const shifted = second.substring(i) + second.substring(0, i);
        // second.substring(i) : second 문자열을 인덱스 i부터 끝까지 추출
        // second.substring(0, i) : second 문자열에서 처음부터 인덱스 i-1까지의 부분을 추출
        // second 를 i 번째 위치를 기준으로 시프트 
         // 시프트된 문자열 생성
        if (shifted === first) {
            return i; 
            // 두 문자열의 길이가 동일한 경우
            // i번째 시프트에서 일치하는 경우 시프트 차이 반환
        }
    }

    return -1; // 일치하는 시프트가 없을 경우
    
}

input.forEach(e => console.log(shiftedDiff(e[0], e[1])));